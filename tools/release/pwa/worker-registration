<script>

            const showRefreshUI = (registration) => {
                
                CallToAction.show("There is a new version.\nUpdate now!", function (event , sender) {
                    window.location.reload();
                } , {
                    fontSize : 30 ,
                    padding: 50 , 
                    yesText : 'Update',
                    fontFamily: 'Helvetica,San Fancisco,ArialHebrew-Bold'
                });
                
            };

            const onNewServiceWorker = (registration, callback) => {

                if (registration.waiting) {
                    // SW is waiting to activate. Can occur if multiple clients open and
                    // one of the clients is refreshed.
                    return callback();
                }

                const listenInstalledStateChange = () => {
                    registration.installing.addEventListener('statechange', () => {
                        if (event.target.state === 'installed') {
                            // A new service worker is available, inform the user                            
                        } else if (event.target.state === 'activated') {
                           callback();
                        }
                    });
                };

                if (registration.installing) {
                    return listenInstalledStateChange();
                }

                // We are currently controlled so a new SW may be found...
                // Add a listener in case a new SW is found,
                registration.addEventListener('updatefound', listenInstalledStateChange);
            };

            window.addEventListener('load', () => {
                // When the user asks to refresh the UI, we'll need to reload the window
                navigator.serviceWorker.addEventListener('message', (event) => {
                                        
                    if (!event.data) {
                        return;
                    }

                    switch (event.data) {
                        case 'reload-window':
                            window.location.reload();
                            break;
                        default:
                            // NOOP
                            break;
                    }
                });

                navigator.serviceWorker.register('./serviceworker.js')
                        .then(function (reg) {
                            
                            var serviceWorker;
                            if (reg.installing) {
                                serviceWorker = reg.installing;
                                // console.log('Service worker installing');
                            } else if (reg.waiting) {
                                serviceWorker = reg.waiting;
                                // console.log('Service worker installed & waiting');
                            } else if (reg.active) {
                                serviceWorker = reg.active;
                                // console.log('Service worker active');
                            }
                            
                            // Track updates to the Service Worker.
                            if (!navigator.serviceWorker.controller) {
                                // The window client isn't currently controlled so it's a new service
                                // worker that will activate immediately
                                return;
                            }

                            onNewServiceWorker(reg, () => {
                                showRefreshUI(reg);
                            });
                        });
            });

</script>
